Stream defines a wrapper for the Iterable interface and adds four useful functions to apply and chain operations on iterators.

All operations should be conducted in a lazy fashion: values are computed only when necessary until some outside iteration needs them.

The preferred way to build Stream objects is via the static factory method Streams#from.

The package provides a skeleton implementation of Stream with the abstract class AbstractStream.

Clients of AbstractStream only needs to implement the iterator() method inherited from the Iterator interface.


sources files in src/streams/

examples in src/examples


ant targets
    clean       deletes jdoc and build directories
    compile     compiles .java files
    jar         bundles classes in jar file
    jdoc        creates jdoc
    examples    runs all examples


@author hugo benichi
@copyright copyright 2013, hugo benichi
@contact hugo[dot]benichi[at]m4x[dot].org
@version 0.1.3
